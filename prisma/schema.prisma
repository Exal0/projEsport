// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Player {
  id        Int   @id @default(autoincrement())
  pseudo    String   @unique
  email     String   @unique
  password  String
  gameId    String?
  rankId    String?
  equipeId  String?
  game      Game?    @relation(fields: [gameId], references: [id])
  rank      Rank?    @relation(fields: [rankId], references: [id])
  equipe    Equipe?  @relation(fields: [equipeId], references: [id])
  roles     Role[]   @relation("PlayerRole")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id        Int   @id @default(autoincrement())
  name      String  @unique
  ranks     Rank[]
  roles     Role[]
  equipes   Equipe[]
 players Player[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rank {
  id      String  @id @default(uuid())
  name    String  @unique
  gameId  String

  game    Game    @relation(fields: [gameId], references: [id])
  players Player[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
 id        Int   @id @default(autoincrement())
  name    String
  gameId  String

  game    Game    @relation(fields: [gameId], references: [id])
  players Player[] @relation("PlayerRole")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Equipe {
  id        Int   @id @default(autoincrement())
  name     String   @unique
  gameId   String

  game     Game     @relation(fields: [gameId], references: [id])
 players Player[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}